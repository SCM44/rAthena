//    ____                    _     _         _ _       ____
//   / ___|  ___  _ __   __ _| |__ (_)_ __ __| ( )___  |  _ \ ___ _ __   ___
//   \___ \ / _ \| '_ \ / _` | '_ \| | '__/ _` |// __| | |_) / _ \ '_ \ / _ \
//    ___) | (_) | | | | (_| | |_) | | | | (_| | \__ \ |  _ <  __/ |_) | (_) |
//   |____/ \___/|_| |_|\__, |_.__/|_|_|  \__,_| |___/ |_| \_\___| .__/ \___/
//                      |___/                                    |_|
// ==========================================================================================
// - By: Songbird
// - Compatible: rAthena Project
// - Description: Comodo Slot Machine Script
// - Version: 2.0
// - Date: 16/06/2019
// -
// - ==== [CHANGELOG] =======================================================================
// - 1.0: NPC Creation
// - 1.1: Added statistics section for GMs.
// - 1.2: Added game and probability testing for GMs.
// - 1.3: Added sounds to the Slot Machine.
// - 1.4: Fixed an issue with non-existent variable.
// - 1.5: Added the option to delete all statistics for GMs. Requires password: Hud83hKk2s
// - 1.6: Adapted to be sold
// - 1.6.1: Fixed an error (Thanks to chrismt24)
// - 1.7: Added the option to change bet quantity
// - 1.8: Added the option to give items instead of "coins".
// - 2.0: Fixed some important calculation errors & bad multiplier (Thanks to Burudeng).
// ==========================================================================================

cmd_in02,187,107,4	script	Slot Machine 1#1SM	563,{ .@name$ = "[^4D5656 Slot Machine ^000000]";

	cutin "Slot",1;
	goto OnStart;

	// ========================================================= CONFIGURATION ========================================================================

	OnInit:

		// Set payoff for each prize [Chest | Coin | Bell | Yggdrasil | Apple] with the help of the Excel table

    	// X1 Prize Bet
		setarray .SlotReward1[0],1000,100,20,5,3,2,1;

		// X2 Prize Bet
        setarray .SlotReward2[0],0,0,0,0,0,0,0; // Set this only if you want to give a non .SlotReward1 multiple quantity otherwise it will be calculated automatically

		// 3rd Prize Bet
        setarray .SlotReward3[0],0,0,0,0,0,0,0; // Set this only if you want to give a non .SlotReward1 multiple quantity otherwise it will be calculated automatically

		// Autofiill SlotReward2 & SlotReward3 if not setted
		if (.SlotReward2[0] == 0) {
			for (.@i = 0; .@i < 7; .@i++) {
				.SlotReward2[.@i] = .SlotReward1[.@i] * 2;
			}
		}

		if (.SlotReward3[0] == 0) {
			for (.@i = 0; .@i < 7; .@i++) {
				.SlotReward3[.@i] = .SlotReward1[.@i] * 3;
			}
		}

    	// Set your Item ID to be used as a coin and the price for 1 game
		.CoinID = 18010;
		.BetQty = 1; // DO NOT USE 0

		// Should the .BetQty (if different from 1) affect the Rewards Quantity as well?
			// TRUE: If .BetQty is set to 3 and rewards array to 125,40,15,6,3,2,1 player will recive 375,120,45,18,9,6,3 credits respectively.
			// FALSE: If .BetQty is set to 3 and rewards array to 125,40,15,6,3,2,1 player will recive 125,40,15,6,3,2,1 credits respectively (This can cause players rage due the fact they're not receiving equitative amounts).
			.BetXArray = true;

		// Give Items instead of X amount of "coins"? If TRUE please check the .ItemRewardIDArray variable to define which and how many Items is going to be given when X combination is made.
		// IF TRUE: THIS OPTION DISABLES THE "BET MORE THAN 1 COIN IN A SINGLE GAME" FEATURE MAKING THE SLOT ACCEPT ONLY 1 CREDIT PER GAME.
			.GiveItems = false;
			setarray .ItemRewardIDArray[0],
				547,1, // x3 Chest			| x1 Condensed White Potion
				546,1, // x3 Coin				| x1 Condensed Yellow Potion
				545,1, // x3 Bell				| x1 Condensed Red Potion
				504,1, // x3 Yggdrasil	| x1 White Potion
				503,1, // x3 Apple			| x1 Yellow Potion
				502,1, // A A Apple			| x1 Orange Potion
				501,1; // A B Apple			| x1 Red Potion

		// Other Info (Does not affect script functionality, this is just for statistics)
      $SlotCoinPrice = 100000; // How much Zeny 1 credit cost? (If you want to see the Zeny to Coin relation in the stats page, this doesn't affect the script functionality)
      $CasinoPassword$ = "Hud83hKk2s"; // Only Admins (Like you) can see this

		// Set objects in reels [Chest | Coin | Bell | Yggdrasil | Apple]
		  setarray .ObjectNames$[0],"Apple","Chest","Yggdrasil","Apple","Apple","Bell","Coin"; // DO NOT TOUCH THIS

    // Balance your winning/lose probabilities with help of the Excel table
		  setarray .SlotObjects[0],9,12,19,25,42;

	// ================================================================================================================================================

	//	Add object values to array - DO NOT TOUCH THIS
	for (.@i = 0; .@i < 5; .@i++) {
		switch (.@i) {
			case 0:
				// Chest index: 1
				for (.@j = 0; .@j < .SlotObjects[.@i]; .@j++) {
					.Odds[getarraysize(.Odds)] = 1;
				}
				break;
			case 1:
				// Coin index: 6
				for (.@j = 0; .@j < .SlotObjects[.@i]; .@j++) {
					.Odds[getarraysize(.Odds)] = 6;
				}
				break;
			case 2:
				// Bell index: 5
				for (.@j = 0; .@j < .SlotObjects[.@i]; .@j++) {
					.Odds[getarraysize(.Odds)] = 5;
				}
				break;
			case 3:
				// Yggdrasil index: 2
				for (.@j = 0; .@j < .SlotObjects[.@i]; .@j++) {
					.Odds[getarraysize(.Odds)] = 2;
				}
				break;
			case 4:
				// Apple index: 0,3 or 4
				for (.@j = 0; .@j < .SlotObjects[.@i]; .@j++) {
					.Odds[getarraysize(.Odds)] = 3;
				}
				break;
		}
	}

	end;

	OnStart:
		if (SlotMachineSpinSpeed == 0) SlotMachineSpinSpeed = 25;
		.@MachineBet = 1;

	OnMainScreen:
	.@BetPrice = .@MachineBet*.BetQty;
	mes .@name$;
	mes "Welcome! The Royal Casino Staff wishes you good luck!";
	mes "   • Bet | Price: ^990000 X" + .@MachineBet + " | " + .@BetPrice + " " + (.@BetPrice == 1? "Credit":"Credits") + "^000000";
	mes "   • Spin Speed: " + SlotMachineSpinSpeed;
	mes " ";
	callfunc "AskQuestion","Please select an option.";

	OnMainMenu:
	switch (select("Play!:" + ((.GiveItems)? "":"Change Bet") + ":Winnings:Change Speed:" + ((getgmlevel() > 10)? "^990000[GM] Statistics^000000" : "") + ":^777777Exit")) {
		clear;
		mes .@name$;
		case 1:

			// If player is a GM
			if (getgmlevel() > 10) {
				if (countitem(.CoinID) < .@BetPrice) {
					mes "You're out of credits!";
					close3;
				}
				mes "Hail GM! Your games doesn't count on the statistics so have fun without worrying about it.";
				mes " ";
				mes " ";
				callfunc "AskQuestion","What do you want to do?";
				switch (select("Play Normal:Select combination:^777777Nothing")) {
					clear;
					mes .@name$;
					case 1:
						delitem .CoinID,.@BetPrice;
						soundeffect "se_slot_machine.wav",0;
						goto OnGame;
					case 2:
						for (.@i = 1; .@i < 4; .@i++) {
							OnGMInput:
							mes "Please enter " + callfunc("F_GetNumSuffix",.@i) + " image index.";
							mes "   • 0: Apple";
							mes "   • 1: Chest";
							mes "   • 2: Yggdrasil";
							mes "   • 5: Bell";
							mes "   • 6: Coins";
							input(.@input,0,6);
							clear;
							mes .@name$;
							if (.@input != 0 && .@input != 1 && .@input != 2 && .@input != 5 && .@input != 6) {
								mes "^990000ERROR 506^000000";
								mes "The number entered is not valid.";
								next;
								mes .@name$;
								goto OnGMInput;
							}
							setd(".@Number"+.@i,.@input);
						}
						delitem .CoinID,.@BetPrice;
						soundeffect "se_slot_machine.wav",0;
						mes "Spinning...";
						goto OnGMGame;
					case 3:
						mes "As always~";
						close3;
				}

			// If is a normal player
			} else {
				if (countitem(.CoinID) < .@BetPrice) {
					mes "You're out of credits!";
					close3;
				} else {
					delitem .CoinID,.@BetPrice;
					$SlotGames++;
					$SlotZenySpent += .@BetPrice*$SlotCoinPrice;
					soundeffect "se_slot_machine.wav",0;
				}
			}

			OnGame:
			mes "Spinning...";

			OnTestGame:

		//   __             __   __            __   ___       ___  __       ___    __
		//  |__)  /\  |\ | |  \ /  \  |\/|    / _` |__  |\ | |__  |__)  /\   |  | /  \ |\ |
		//  |  \ /~~\ | \| |__/ \__/  |  |    \__> |___ | \| |___ |  \ /~~\  |  | \__/ | \|
		//

			.@Number1 = .Odds[rand(getarraysize(.Odds))];

			// Number 0,3, and 4 are the same (Apple):
			if (.@Number1 == 3 || .@Number1 == 4) .@Number1 = 0;

			.@Number2 = .Odds[rand(getarraysize(.Odds))];

			// Number 0,3, and 4 are the same (Apple):
			if (.@Number2 == 3 || .@Number2 == 4) .@Number2 = 0;

			.@Number3 = .Odds[rand(getarraysize(.Odds))];

			// Number 0,3, and 4 are the same (Apple):
			if (.@Number3 == 3 || .@Number3 == 4) .@Number3 = 0;

			// if (getgmlevel() > 10 && .@Testing == false) dispbottom "You got: " + .ObjectNames$[.@Number1] + " " + .ObjectNames$[.@Number2] + " " + .ObjectNames$[.@Number3];

			OnGMGame:

		//   ___               __                      __   ___  __   __
		//  |__  | \_/ | |\ | / _`    |\ | |  |  |\/| |__) |__  |__) /__`
		//  |    | / \ | | \| \__>    | \| \__/  |  | |__) |___ |  \ .__/
		//

			// -- Number 1
			.@SpinNumber1 = .@Number1;

			// -- Number 2
			if ((.@Number2 + 4) > 6) {

				// Fix number 1st relative position
				.@SpinNumber2 = ((.@Number2 + 4) - 7) - .@SpinNumber1;

				// Fix negative value
				if (.@SpinNumber2 < 0) {
					.@SpinNumber2 += 7;
				}

			} else {

				// Fix number 1st relative position
				.@SpinNumber2 = (.@Number2 + 4) - .@SpinNumber1;

				// Fix negative value
				if (.@SpinNumber2 < 0) {
					.@SpinNumber2 += 7;
				}
			}

			// -- Number 3
			if ((.@Number3 + 3) > 6) {

				// Fix number 1st relative position
				.@SpinNumber3 = ((.@Number3 + 3) - 7) - .@SpinNumber2;

				// Fix negative value
				if (.@SpinNumber3 < 0) {
					.@SpinNumber3 += 7;
				}

				// Fix number 2nd relative position
				.@SpinNumber3 -= .@SpinNumber1;
				if (.@SpinNumber3 < 0) {
					.@SpinNumber3 += 7;
				}

			} else {

				// Fix number 1st relative position
				.@SpinNumber3 = (.@Number3 + 3) - .@SpinNumber2;

				// Fix negative value
				if (.@SpinNumber3 < 0) {
					.@SpinNumber3 += 7;
				}

				// Fix number 2nd relative position
				.@SpinNumber3 -= .@SpinNumber1;
				if (.@SpinNumber3 < 0) {
					.@SpinNumber3 += 7;
				}
			}

		//   __       ___                       __     __
		//  /  ` |  |  |  | |\ |     |\/|  /\  / _` | /  `
		//  \__, \__/  |  | | \|     |  | /~~\ \__> | \__,
		//

			if (.@Testing) goto OnJumpCutin;

			// Spin 1st loop
			for (.@i = 1; .@i < 14; .@i++) {
				cutin "Spin"+.@i,1;
				sleep2(SlotMachineSpinSpeed);
			}

			// Spin to match 1st Number
			for (.@i = 0; .@i <= (.@SpinNumber1*2); .@i++) {
				cutin "Spin"+.@i,1;
				sleep2(SlotMachineSpinSpeed);
			}
			soundeffect "se_slot_stop.wav",0;

			// Spin 2nd loop - (Depends on 1st Number)
			for (.@i = 1; .@i < 14; .@i++) {
				cutin "Spin"+(.@SpinNumber1*2)+"-"+.@i,1;
				sleep2(SlotMachineSpinSpeed);
			}

			// Spin to match 2nd Number - (Depends on 1st Number)
			for (.@i = 0; .@i <= (.@SpinNumber2*2); .@i++) {
				cutin "Spin"+(.@SpinNumber1*2)+"-"+.@i,1;
				sleep2(SlotMachineSpinSpeed);
			}
			soundeffect "se_slot_stop.wav",0;

			// Spin 3rd Loop - (Depends on 2nd Number)
			for (.@i = 1; .@i < 14; .@i++) {
				cutin "Spin"+(.@SpinNumber1*2)+(.@SpinNumber2*2)+"-"+.@i,1;
				sleep2(SlotMachineSpinSpeed);
			}

			// Spin to match 3rd Number - (Depends on 2nd Number)
			for (.@i = 0; .@i <= (.@SpinNumber3*2); .@i++) {
				cutin "Spin"+(.@SpinNumber1*2)+(.@SpinNumber2*2)+"-"+.@i,1;
				sleep2(SlotMachineSpinSpeed);
			}
			soundeffect "se_slot_stop.wav",0;

		//   __   ___  __            ___
		//  |__) |__  /__` |  | |     |
		//  |  \ |___ .__/ \__/ |___  |
		//

			clear;
			mes .@name$;

			OnJumpCutin:

			// If all names match then is full row
			// if (.ObjectNames$[.@Number1] == .ObjectNames$[.@Number2] && .ObjectNames$[.@Number2] == .ObjectNames$[.@Number3]) {
			if (.@Number1 == .@Number2 && .@Number1 == .@Number3) {

				switch (.@Number1) {

					// Case Chest
					case 1:
						if (.@Testing) {
							.@TestWin++;
							.@ItemTestQuantity[0] += 1;
							.@TestReward += ((.BetXArray)? getd(".SlotReward" + .@MachineBet + "[0]")*.BetQty:getd(".SlotReward" + .@MachineBet + "[0]"));
							break;
						} else {
							soundeffectall "se_slot_winner.wav",0;
							specialeffect2 10;
							specialeffect2 274;
							$@SlotWinner$ = strnpcinfo(0);
							donpcevent "#H_ChestWinner::OnEffect";
							mes "^990000JACKPOT - JACKPOT - JACKPOT^000000";
							mes "Congratulations you've earned the highest prize in our Slot Machine! What a lucky person you are!";
							
								// Give prize
							if (.GiveItems) {
								getitem .ItemRewardIDArray[0],.ItemRewardIDArray[1];
								.ItemQuantity[0] += 1;
							} else getitem .CoinID,((.BetXArray)? getd(".SlotReward" + .@MachineBet + "[0]")*.BetQty:getd(".SlotReward" + .@MachineBet + "[0]"));
							.@RewardID = 0;
							break;
						}

					// Case Coins
					case 6:
						if (.@Testing) {
							.@TestWin++;
							.@ItemTestQuantity[1] += 1;
							.@TestReward += ((.BetXArray)? getd(".SlotReward" + .@MachineBet + "[1]")*.BetQty:getd(".SlotReward" + .@MachineBet + "[1]"));
							break;
						} else {
							soundeffect "se_slot_reward.wav",0;
							mes "^990000TRIPLE COIN!^000000";
							mes "Wow! You've earned a lot of money, right?! Let the money flow!";
							
								// Give prize
							if (.GiveItems) {
								getitem .ItemRewardIDArray[2],.ItemRewardIDArray[3];
								.ItemQuantity[1] += 1;
							} else getitem .CoinID,((.BetXArray)? getd(".SlotReward" + .@MachineBet + "[1]")*.BetQty:getd(".SlotReward" + .@MachineBet + "[1]"));
							.@RewardID = 1;
							break;
						}

					// Case Bell
					case 5:
						if (.@Testing) {
							.@TestWin++;
							.@ItemTestQuantity[2] += 1;
							.@TestReward += ((.BetXArray)? getd(".SlotReward" + .@MachineBet + "[2]")*.BetQty:getd(".SlotReward" + .@MachineBet + "[2]"));
							break;
						} else {
							soundeffect "se_slot_reward.wav",0;
							mes "^990000TRIPLE BELL!^000000";
							mes "Not bad my friend, you're one step away from being rich!";
							
								// Give prize
							if (.GiveItems) {
								getitem .ItemRewardIDArray[4],.ItemRewardIDArray[5];
								.ItemQuantity[2] += 1;
							} else getitem .CoinID,((.BetXArray)? getd(".SlotReward" + .@MachineBet + "[2]")*.BetQty:getd(".SlotReward" + .@MachineBet + "[2]"));
							.@RewardID = 2;
							break;
						}

					// Case Yggdrasil
					case 2:
						if (.@Testing) {
							.@TestWin++;
							.@ItemTestQuantity[3] += 1;
							.@TestReward += ((.BetXArray)? getd(".SlotReward" + .@MachineBet + "[3]")*.BetQty:getd(".SlotReward" + .@MachineBet + "[3]"));
							break;
						} else {
							soundeffect "se_slot_reward.wav",0;
							mes "^990000TRIPLE YGGDRASIL!^000000";
							mes "The fruit of life smiles at you this time! Fortune is all you need.";
							
								// Give prize
							if (.GiveItems) {
								getitem .ItemRewardIDArray[6],.ItemRewardIDArray[7];
								.ItemQuantity[3] += 1;
							} else getitem .CoinID,((.BetXArray)? getd(".SlotReward" + .@MachineBet + "[3]")*.BetQty:getd(".SlotReward" + .@MachineBet + "[3]"));
							.@RewardID = 3;
							break;
						}

					// Case Apple
					case 0:
						if (.@Testing) {
							.@TestWin++;
							.@ItemTestQuantity[4] += 1;
							.@TestReward += ((.BetXArray)? getd(".SlotReward" + .@MachineBet + "[4]")*.BetQty:getd(".SlotReward" + .@MachineBet + "[4]"));
							break;
						} else {
							soundeffect "se_slot_reward.wav",0;
							mes "^990000TRIPLE APPLE!^000000";
							mes "Apples... A juice and sweet fruit, could we live without them?";
							
								// Give prize
							if (.GiveItems) {
								getitem .ItemRewardIDArray[8],.ItemRewardIDArray[9];
								.ItemQuantity[4] += 1;
							} else getitem .CoinID,((.BetXArray)? getd(".SlotReward" + .@MachineBet + "[4]")*.BetQty:getd(".SlotReward" + .@MachineBet + "[4]"));
							.@RewardID = 4;
							break;
						}

					default:
						mes "^990000MACHINE ERROR!^000000";
						mes "Please send a screenshot to a GM!";
						mes "   • Your Bet: " + .@MachineBet + "(" + .BetQty + ") Credits";
						mes "   • Error Code: " + .@Number1;
						close3;
				}

			// A | A | Apple
			} else if ((.@Number1 == .@Number2 && .@Number1 != 0 && .@Number3 == 0) || (.@Number1 == .@Number3 && .@Number1 != 0 && .@Number2 == 0) || (.@Number2 == .@Number3 && .@Number2 != 0 && .@Number1 == 0)) {
				if (getd(".SlotReward" + .@MachineBet + "[5]") > 0) {
					if (.@Testing) {
						.@TestWin++;
						.@ItemTestQuantity[5] += 1;
						.@TestReward += ((.BetXArray)? getd(".SlotReward" + .@MachineBet + "[5]")*.BetQty:getd(".SlotReward" + .@MachineBet + "[5]"));
					} else {
						mes "^990000TWO ANY & APPLE!^000000";
						mes "Hey not bad! I mean, is not a perfect play but next game is going to be better... right?";
						
							// Give prize
						if (.GiveItems) {
							getitem .ItemRewardIDArray[10],.ItemRewardIDArray[11];
							.ItemQuantity[5] += 1;
						} else getitem .CoinID,((.BetXArray)? getd(".SlotReward" + .@MachineBet + "[5]")*.BetQty:getd(".SlotReward" + .@MachineBet + "[5]"));
						.@RewardID = 5;
					}
				} else {
					goto OnDisabledGame;
				}

			// A | B | Apple
			 } else if ((.@Number1 != .@Number2 && .@Number1 != 0 && .@Number2 != 0 && .@Number3 == 0) || (.@Number1 != .@Number3 && .@Number1 != 0 && .@Number3 != 0 && .@Number2 == 0) || (.@Number2 != .@Number3 && .@Number2 != 0 && .@Number3 != 0 && .@Number1 == 0)) {
				if (getd(".SlotReward" + .@MachineBet + "[6]") > 0) {
					if (.@Testing) {
						.@TestWin++;
						.@ItemTestQuantity[6] += 1;
						.@TestReward += ((.BetXArray)? getd(".SlotReward" + .@MachineBet + "[6]")*.BetQty:getd(".SlotReward" + .@MachineBet + "[6]"));
					} else {
						mes "^990000ONE ANY & APPLE!^000000";
						mes "Yes! Maybe It's not the best prize but come on, it could be worst.";
						
							// Give prize
						if (.GiveItems) {
							getitem .ItemRewardIDArray[12],.ItemRewardIDArray[13];
							.ItemQuantity[6] += 1;
						} else getitem .CoinID,((.BetXArray)? getd(".SlotReward" + .@MachineBet + "[6]")*.BetQty:getd(".SlotReward" + .@MachineBet + "[6]"));
						.@RewardID = 6;
					}
				} else {
						goto OnDisabledGame;
					}

			// Lose
			} else {
				OnDisabledGame:
				if (.@Testing) {
					.@TestLose++;
				} else {
					mes "^990000YOU LOSE!^000000";
					mes "I'm sorry, good luck next time.";
					mes "Do not desist!";
					.@RewardID = 10;
				}
			}

			// Statistics and Others
			if (getgmlevel() < 10 && .@RewardID != 10) {
					$SlotWins++;
					if (!.GiveItems) $SlotZenyEarned += $SlotCoinPrice * ((.BetXArray)? getd(".SlotReward" + .@MachineBet + "[" + .@RewardID + "]")*.BetQty:getd(".SlotReward" + .@MachineBet + "[" + .@RewardID + "]"));
			}

			if (.@Testing) {
				.@TestLoops++;
				goto OnTestLoop;
			}

			goto OnMainMenu;

		case 2:
			.@MachineBet++;
			if (.@MachineBet > 3) .@MachineBet = 1;
			clear;
			goto OnMainScreen;
		case 3:
			OnWinnings:
			mes "All winning combinations are listed here based in your bet quantity, may luck be on your side!";
			mes " ";
			mes " ";
			callfunc "AskQuestion","Select and option from the menu.";
			switch (select("Triple Chest:Triple Coin:Triple Bell:Triple Yggdrasil:Triple Apple:Two Any & Apple:One Any & Apple:^777777Return")) {
				clear;
				mes .@name$;
				case 1:
					cutin "Spin28-12.bmp",1;
					mes "This combination gives:";
					if (.GiveItems) {
						mes "   • Item Prize: X" + .ItemRewardIDArray[1] + " <ITEM>" + getitemname(.ItemRewardIDArray[0]) + "<INFO>" + .ItemRewardIDArray[0] + "</INFO></ITEM>";
						mes " ";
					} else {
						mes "   • 1st Coin: " + ((.BetXArray)? .SlotReward1[0]*.@BetPrice:.SlotReward1[0]);
						mes "   • 2nd Coin: " + ((.BetXArray)? .SlotReward2[0]*.@BetPrice:.SlotReward2[0]);
						mes "   • 3rd Coin: ^990000" + ((.BetXArray)? .SlotReward3[0]*.@BetPrice:.SlotReward3[0]) + "^000000";
					}
					callfunc "AskQuestion","This is the Jackpot prize! Are you lucky enough to receive it?";
					switch (select("Back:^777777Exit")) {
						clear;
						mes .@name$;
						case 1:
							goto OnWinnings;
						case 2:
							mes "Thank you for playing.";
							close3;
					}
				case 2:
					cutin "Spin128-12.bmp",1;
					mes "This combination gives:";
					if (.GiveItems) {
						mes "   • Item Prize: X" + .ItemRewardIDArray[3] + " <ITEM>" + getitemname(.ItemRewardIDArray[2]) + "<INFO>" + .ItemRewardIDArray[2] + "</INFO></ITEM>";
						mes " ";
					} else {
						mes "   • 1st Coin: " + ((.BetXArray)? .SlotReward1[1]*.@BetPrice:.SlotReward1[1]);
						mes "   • 2nd Coin: " + ((.BetXArray)? .SlotReward2[1]*.@BetPrice:.SlotReward2[1]);
						mes "   • 3rd Coin: " + ((.BetXArray)? .SlotReward3[1]*.@BetPrice:.SlotReward3[1]);
					}
					callfunc "AskQuestion","The highest normal prize! Play and be one of lucky ones to have it!";
					switch (select("Back:^777777Exit")) {
						clear;
						mes .@name$;
						case 1:
							goto OnWinnings;
						case 2:
							mes "Thank you for playing.";
							close3;
					}
				case 3:
					cutin "Spin108-12.bmp",1;
					mes "This combination gives:";
					if (.GiveItems) {
						mes "   • Item Prize: X" + .ItemRewardIDArray[5] + " <ITEM>" + getitemname(.ItemRewardIDArray[4]) + "<INFO>" + .ItemRewardIDArray[4] + "</INFO></ITEM>";
						mes " ";
					} else {
						mes "   • 1st Coin: " + ((.BetXArray)? .SlotReward1[2]*.@BetPrice:.SlotReward1[2]);
						mes "   • 2nd Coin: " + ((.BetXArray)? .SlotReward2[2]*.@BetPrice:.SlotReward2[2]);
						mes "   • 3rd Coin: " + ((.BetXArray)? .SlotReward3[2]*.@BetPrice:.SlotReward3[2]);
					}
					callfunc "AskQuestion","The 2nd normal prize! Play and be one of lucky ones to have it!";
					switch (select("Back:^777777Exit")) {
						clear;
						mes .@name$;
						case 1:
							goto OnWinnings;
						case 2:
							mes "Thank you for playing.";
							close3;
					}
				case 4:
					cutin "Spin48-12.bmp",1;
					mes "This combination gives:";
					if (.GiveItems) {
						mes "   • Item Prize: X" + .ItemRewardIDArray[7] + " <ITEM>" + getitemname(.ItemRewardIDArray[6]) + "<INFO>" + .ItemRewardIDArray[6] + "</INFO></ITEM>";
						mes " ";
					} else {
						mes "   • 1st Coin: " + ((.BetXArray)? .SlotReward1[3]*.@BetPrice:.SlotReward1[3]);
						mes "   • 2nd Coin: " + ((.BetXArray)? .SlotReward2[3]*.@BetPrice:.SlotReward2[3]);
						mes "   • 3rd Coin: " + ((.BetXArray)? .SlotReward3[3]*.@BetPrice:.SlotReward3[3]);
					}
					callfunc "AskQuestion","The 3nd normal prize! The seed of life will bring you luck today!";
					switch (select("Back:^777777Exit")) {
						clear;
						mes .@name$;
						case 1:
							goto OnWinnings;
						case 2:
							mes "Thank you for playing.";
							close3;
					}
				case 5:
					cutin "Spin08-4.bmp",1;
					mes "This combination gives:";
					if (.GiveItems) {
						mes "   • Item Prize: X" + .ItemRewardIDArray[9] + " <ITEM>" + getitemname(.ItemRewardIDArray[8]) + "<INFO>" + .ItemRewardIDArray[8] + "</INFO></ITEM>";
						mes " ";
					} else {
						mes "   • 1st Coin: " + ((.BetXArray)? .SlotReward1[4]*.@BetPrice:.SlotReward1[4]);
						mes "   • 2nd Coin: " + ((.BetXArray)? .SlotReward2[4]*.@BetPrice:.SlotReward2[4]);
						mes "   • 3rd Coin: " + ((.BetXArray)? .SlotReward3[4]*.@BetPrice:.SlotReward3[4]);
					}
					callfunc "AskQuestion","Apples are extremely rich in important antioxidants!";
					switch (select("Back:^777777Exit")) {
						clear;
						mes .@name$;
						case 1:
							goto OnWinnings;
						case 2:
							mes "Thank you for playing.";
							close3;
					}
				case 6:
					OnRewardAAM:
					cutin callfunc("F_Rand","Spin28-10.bmp","Spin48-8.bmp","Spin44-2.bmp","Spin1012-8.bmp","Spin04-12.bmp"),1;
					mes "This combination gives:";
					if (.GiveItems) {
						mes "   • Item Prize: X" + .ItemRewardIDArray[11] + " <ITEM>" + getitemname(.ItemRewardIDArray[10]) + "<INFO>" + .ItemRewardIDArray[10] + "</INFO></ITEM>";
						mes " ";
					} else {
						mes "   • 1st Coin: " + ((.BetXArray)? .SlotReward1[5]*.@BetPrice:.SlotReward1[5]);
						mes "   • 2nd Coin: " + ((.BetXArray)? .SlotReward2[5]*.@BetPrice:.SlotReward2[5]);
						mes "   • 3rd Coin: " + ((.BetXArray)? .SlotReward3[5]*.@BetPrice:.SlotReward3[5]);
					}
					callfunc "AskQuestion","The consolation prize! Better to have this than nothing!";
					switch (select("Back:Check another combination:^777777Exit")) {
						clear;
						mes .@name$;
						case 1:
							goto OnWinnings;
						case 2:
							goto OnRewardAAM;
						case 3:
							mes "Thank you for playing.";
							close3;
					}
				case 7:
					OnRewardABM:
					cutin callfunc("F_Rand","Spin42-6.bmp","Spin1210-8.bmp","Spin04-6.bmp","Spin102-2.bmp","Spin0-10.bmp"),1;
					mes "This combination gives:";
					if (.GiveItems) {
						mes "   • Item Prize: X" + .ItemRewardIDArray[13] + " <ITEM>" + getitemname(.ItemRewardIDArray[12]) + "<INFO>" + .ItemRewardIDArray[12] + "</INFO></ITEM>";
						mes " ";
					} else {
						mes "   • 1st Coin: " + ((.BetXArray)? .SlotReward1[6]*.@BetPrice:.SlotReward1[6]);
						mes "   • 2nd Coin: " + ((.BetXArray)? .SlotReward2[6]*.@BetPrice:.SlotReward2[6]);
						mes "   • 3rd Coin: " + ((.BetXArray)? .SlotReward3[6]*.@BetPrice:.SlotReward3[6]);
					}
					callfunc "AskQuestion","Hey take your money back! This can be also called a free spin!";
					switch (select("Back:Check another combination:^777777Exit")) {
						clear;
						mes .@name$;
						case 1:
							goto OnWinnings;
						case 2:
							goto OnRewardABM;
						case 3:
							mes "Thank you for playing.";
							close3;
					}
				case 8:
					clear;
					cutin "Slot",1;
					goto OnMainScreen;
			}
		case 4:
			OnSpeedChange:
			mes "Please input a number from:";
			mes "   • Slower: 50";
			mes "   • Faster: 10";
			mes " ";
			mes " ";
			callfunc "AskQuestion","The default value is 25";
			switch (input(.@input,10,50)) {
				clear;
				mes .@name$;
				default:
					mes "^990000ERROR 506^000000";
					mes "The number entered is not valid.";
					next;
					mes .@name$;
					goto OnSpeedChange;
				case 0:
					clear;
					SlotMachineSpinSpeed = .@input;
					goto OnMainScreen;
			}
		case 5:
			goto OnStatistics;
			close3;
		case 6:
			mes "Thank you for playing.";
			close3;
	}

	OnStatistics:

		//	Get total objects
		.@TotalObjects = .SlotObjects[0] + .SlotObjects[1] + .SlotObjects[2] + .SlotObjects[3] + .SlotObjects[4];

		// Chest | Chest | Chest
		.@Combination1 = (.SlotObjects[0]*.SlotObjects[0]*.SlotObjects[0]);

		// Coin | Coin | Coin
		.@Combination2 = (.SlotObjects[1]*.SlotObjects[1]*.SlotObjects[1]);

		// Bell | Bell | Bell
		.@Combination3 = (.SlotObjects[2]*.SlotObjects[2]*.SlotObjects[2]);

		// Yggdrasil | Yggdrasil | Yggdrasil
		.@Combination4 = (.SlotObjects[3]*.SlotObjects[3]*.SlotObjects[3]);

		// Apple | Apple | Apple
		.@Combination5 = (.SlotObjects[4]*.SlotObjects[4]*.SlotObjects[4]);

		// A | A | Apple
		.@preCalc = ((.SlotObjects[0]*.SlotObjects[0])+(.SlotObjects[1]*.SlotObjects[1])+(.SlotObjects[2]*.SlotObjects[2])+(.SlotObjects[3]*.SlotObjects[3]))*(.SlotObjects[4]);
		.@Combination6 = getd(".SlotReward" + .@MachineBet + "[5]") > 0 ? .@preCalc+.@preCalc+.@preCalc : 0;

		// A | B | Apple
		.@preCalc = ((.SlotObjects[0]*(.SlotObjects[1]+.SlotObjects[2]+.SlotObjects[3])) + (.SlotObjects[1]*(.SlotObjects[0]+.SlotObjects[2]+.SlotObjects[3])) + (.SlotObjects[2]*(.SlotObjects[1]+.SlotObjects[0]+.SlotObjects[3])) + (.SlotObjects[3]*(.SlotObjects[1]+.SlotObjects[2]+.SlotObjects[0])))*(.SlotObjects[4]);
		.@Combination7 = getd(".SlotReward" + .@MachineBet + "[6]") > 0 ? .@preCalc+.@preCalc+.@preCalc : 0;

		// Calculate total wins - E11
		.@TotalWins = (.@Combination1 + .@Combination2 + .@Combination3 + .@Combination4 + .@Combination5 + .@Combination6 + .@Combination7);

		// Calculate total combinations - L6
		.@TotalCombinations = (.@TotalObjects*.@TotalObjects*.@TotalObjects);

		// Calculate win rate - D11
		.@WinRate = ((.@TotalWins*100)/.@TotalCombinations);

		// Combination Payoff - C4:C10
		.@combinationPayoff1 = .@Combination1*.SlotReward1[0];
		.@combinationPayoff2 = .@Combination2*.SlotReward1[1];
		.@combinationPayoff3 = .@Combination3*.SlotReward1[2];
		.@combinationPayoff4 = .@Combination4*.SlotReward1[3];
		.@combinationPayoff5 = .@Combination5*.SlotReward1[4];
		.@combinationPayoff6 = .@Combination6*.SlotReward1[5];
		.@combinationPayoff7 = .@Combination7*.SlotReward1[6];

		.@PayoffRatio = (.@combinationPayoff1 + .@combinationPayoff2 + .@combinationPayoff3 + .@combinationPayoff4 + .@combinationPayoff5 + .@combinationPayoff6 + .@combinationPayoff7) * 100 / .@TotalCombinations;

		OnGeneralStatistics:
		mes "General Statistics:";
		mes "   • Win Ratio: " +  .@WinRate + "%";
		mes "   • Payoff: " + .@PayoffRatio + "%";
		mes "   • Total Games: " + callfunc("F_InsertComma",($SlotGames));
		if (($SlotGames) == 0) {
			mes "   • Player Win Ratio: 0%";
		} else {
			mes "   • Player Win Ratio: " + ((($SlotWins)*100)/($SlotGames)) + "%";
		}
		switch (select("General Statistics:Test Games:^990000Clear Statistics:^777777Return")) {
			clear;
			mes .@name$;
			case 1:
				mes "General Statistics:";
				mes "   • Total Games: " + callfunc("F_InsertComma",$SlotGames);
				if ($SlotGames == 0) {
						mes "   • Player Win Ratio: 0%";
				} else {
					mes "   • Player Win Ratio: " + ($SlotWins*100)/($SlotGames) + "%";
				}
				mes "   • ^196F3DZeny Spent:^000000 " + callfunc("F_InsertComma",$SlotZenySpent);
				if (.GiveItems) {
					next;
					mes "   • ^990000Items Earned:^000000";
					mes "   • " + " <ITEM>" + getitemname(.ItemRewardIDArray[0]) + "<INFO>" + .ItemRewardIDArray[0] + "</INFO></ITEM>: " + .ItemQuantity[0];
					mes "   • " + " <ITEM>" + getitemname(.ItemRewardIDArray[2]) + "<INFO>" + .ItemRewardIDArray[2] + "</INFO></ITEM>: " + .ItemQuantity[1];
					mes "   • " + " <ITEM>" + getitemname(.ItemRewardIDArray[4]) + "<INFO>" + .ItemRewardIDArray[4] + "</INFO></ITEM>: " + .ItemQuantity[2];
					mes "   • " + " <ITEM>" + getitemname(.ItemRewardIDArray[6]) + "<INFO>" + .ItemRewardIDArray[6] + "</INFO></ITEM>: " + .ItemQuantity[3];
					mes "   • " + " <ITEM>" + getitemname(.ItemRewardIDArray[8]) + "<INFO>" + .ItemRewardIDArray[8] + "</INFO></ITEM>: " + .ItemQuantity[4];
					mes "   • " + " <ITEM>" + getitemname(.ItemRewardIDArray[10]) + "<INFO>" + .ItemRewardIDArray[10] + "</INFO></ITEM>: " + .ItemQuantity[5];
					mes "   • " + " <ITEM>" + getitemname(.ItemRewardIDArray[12]) + "<INFO>" + .ItemRewardIDArray[12] + "</INFO></ITEM>: " + .ItemQuantity[6];
				}
				else mes "   • ^990000Zeny Earned:^000000 " + callfunc("F_InsertComma",$SlotZenyEarned);
				close3;
			case 2:
				OnTestStart:
				mes "How many games?";
				input .@Repetitions;
				if (.@Repetitions == 0) {
					next;
					mes .@name$;
					mes "Invalid number of repetitions";
					close3;
				}
				.@Testing = 1;
				.@MaxEarning = .@Repetitions * .BetQty;
				freeloop(1);
				OnTestLoop:
				while (.@TestLoops < .@Repetitions) {
					goto OnTestGame;
				}
				mes "Testing " + callfunc("F_InsertComma",.@Repetitions) + " games...";
				mes "   • Wins: " + callfunc("F_InsertComma",.@TestWin) + " | Lose: " + callfunc("F_InsertComma",.@TestLose);
				mes "       • Win ratio: " + .@TestWin * 100 / .@Repetitions + "%";

				if (!.GiveItems) {
					if (.@TestReward < .@MaxEarning) mes "   • Earned: " + callfunc("F_InsertComma",.@TestReward) + " | Lost: " + callfunc("F_InsertComma",.@MaxEarning - .@TestReward);
					else mes "   • Earned: " + callfunc("F_InsertComma",.@TestReward);
					mes "       • Earned ratio: " + .@TestReward * 100 / .@MaxEarning + "%";
				}

				else {
					next;
					mes "   • ^990000Items Earned:^000000";
					mes "   • " + " <ITEM>" + getitemname(.ItemRewardIDArray[0]) + "<INFO>" + .ItemRewardIDArray[0] + "</INFO></ITEM>: " + .@ItemTestQuantity[0];
					mes "   • " + " <ITEM>" + getitemname(.ItemRewardIDArray[2]) + "<INFO>" + .ItemRewardIDArray[2] + "</INFO></ITEM>: " + .@ItemTestQuantity[1];
					mes "   • " + " <ITEM>" + getitemname(.ItemRewardIDArray[4]) + "<INFO>" + .ItemRewardIDArray[4] + "</INFO></ITEM>: " + .@ItemTestQuantity[2];
					mes "   • " + " <ITEM>" + getitemname(.ItemRewardIDArray[6]) + "<INFO>" + .ItemRewardIDArray[6] + "</INFO></ITEM>: " + .@ItemTestQuantity[3];
					mes "   • " + " <ITEM>" + getitemname(.ItemRewardIDArray[8]) + "<INFO>" + .ItemRewardIDArray[8] + "</INFO></ITEM>: " + .@ItemTestQuantity[4];
					mes "   • " + " <ITEM>" + getitemname(.ItemRewardIDArray[10]) + "<INFO>" + .ItemRewardIDArray[10] + "</INFO></ITEM>: " + .@ItemTestQuantity[5];
					mes "   • " + " <ITEM>" + getitemname(.ItemRewardIDArray[12]) + "<INFO>" + .ItemRewardIDArray[12] + "</INFO></ITEM>: " + .@ItemTestQuantity[6];
				}
				freeloop(0);
				.@Testing = 0;
				.@TestLose = 0;
				.@TestWin = 0;
				for (.@i = 0; .@i < 7; .@i++) {
					.@ItemTestQuantity[.@i] = 0;
				}
				close3;
			case 3:
				OnClearStatistics:
				mes "Please enter password:";
				input .@Input$;
				if (.@Input$ == $CasinoPassword$) {
					clear;
					mes .@name$;
					mes "This will clear all the player statistics. This action can not be undone.";
					mes " ";
					mes " ";
					callfunc "AskQuestion","Are you sure?";
					switch (select("^990000Erase:^777777Leave")) {
						clear;
						mes .@name$;
						case 1:
							mes "Done.";
							$SlotGames = 0;
							$SlotWins = 0;
							$SlotZenyEarned = 0;
							$SlotZenySpent = 0;
							for (.@i = 0; .@i < 7; .@i++) {
								.ItemQuantity[.@i] = 0;
							}
							close3;
						case 2:
							mes "Alright~";
							close;
					}
				}
				clear;
				mes .@name$;
				mes "Wrong Password.";
				close3;
			case 4:
				clear;
				goto OnMainScreen;
		}

	end;
}

cmd_in02,185,107,4	duplicate(Slot Machine 1#1SM)	Slot Machine 2#2SM	563
cmd_in02,183,107,4	duplicate(Slot Machine 1#1SM)	Slot Machine 3#3SM	563
cmd_in02,181,107,4	duplicate(Slot Machine 1#1SM)	Slot Machine 4#4SM	563

cmd_in02,167,107,4	duplicate(Slot Machine 1#1SM)	Slot Machine 8#8SM	563
cmd_in02,169,107,4	duplicate(Slot Machine 1#1SM)	Slot Machine 7#7SM	563
cmd_in02,171,107,4	duplicate(Slot Machine 1#1SM)	Slot Machine 6#6SM	563
cmd_in02,173,107,4	duplicate(Slot Machine 1#1SM)	Slot Machine 5#5SM	563

cmd_in02,0,0,4	script	#H_ChestWinner	139,{

	OnEffect:
		specialeffect 18,AREA,$@SlotWinner$;
		sleep(500);
		specialeffect 18,AREA,$@SlotWinner$;
		sleep(400);
		specialeffect 18,AREA,$@SlotWinner$;
		sleep(300);
		specialeffect 18,AREA,$@SlotWinner$;
		sleep(200);
		specialeffect 18,AREA,$@SlotWinner$;
	end;
}

cmd_in02,186,104,4	script	#H_CasinoSound	139,{

	OnMinute10:
	OnMinute20:
	OnMinute30:
	OnMinute40:
	OnMinute50:
		soundeffectall "se_casino.wav",0;
	end;
}

function	script	AskQuestion	{

	.@TextColor$ = "^0B4C5F";

	mes .@TextColor$ + getarg(0) + "^000000";
	return;
}
